Request1: : Provide the list of markets in which customer “Atliq Exclusive” operates its business in the APAC region.
Query: 
select distinct market 
from dim_customer 
where customer = 'Atliq Exclusive' and region = 'APAC';

Request2: What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields: unique_products_2020, unique_products_2021, percentage_chg.

Query:   with product_count_2020 as (select count(distinct(product_code)) as unique_products_2020 from fact_sales_monthly
where fiscal_year=2020),
 product_count_2021 as (select count(distinct(product_code)) as unique_products_2021 from fact_sales_monthly
where fiscal_year=2021)
select unique_products_2020, unique_products_2021,  
round((unique_products_2021 - unique_products_2020)*100/unique_products_2020,2) as percentage_chg
from  product_count_2020, product_count_2021;

Request3 : Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields: segment, product_count.

Query: 

select count(distinct(product_code)) as product_count, segment from dim_product 
group by segment 
order by product_count desc;

Request4 : : Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields: segment, product_count_2020, product_count_2021, difference.

Query: WITH product_count AS
(select p.segment as segment,
count(distinct (case when fiscal_year = 2020 then s.product_code end)) 
as product_count_2020,
count(distinct (case when fiscal_year = 2021 then s.product_code end)) 
as product_count_2021
from fact_sales_monthly s
 join dim_product p
on s.product_code= p.product_code
group by p.segment)
select segment, product_count_2020, product_count_2021,
 (product_count_2021-product_count_2020) as Difference
from product_count
order by difference desc;


Request5 : : Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields: product_code, product, manufacturing_cost.

Query: 

select p.product_code, p.product, ROUND(m.manufacturing_cost,2) from dim_product p
join fact_manufacturing_cost m
on p.product_code=m.product_code
where m.manufacturing_cost = (select max(manufacturing_cost) from fact_manufacturing_cost)
or
m.manufacturing_cost = (select min(manufacturing_cost) from fact_manufacturing_cost)
order by m.manufacturing_cost desc;


Request6 : : Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields: customer_code, customer, average_discount_percentage.

Query: 
select c.customer_code, c.customer, round(avg(pre_invoice_discount_pct)*100,2) as  average_discount_percentage 
from dim_customer c
join fact_pre_invoice_deductions pi
on c.customer_code=pi.customer_code
where fiscal_year = 2021 and market = "India"
group by customer, customer_code
order by average_discount_percentage desc 
limit 5;

Request7 : : Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high performing months and take strategic decisions. The final report contains these columns: Month, Year, Gross sales Amount.

Query: 

select monthname(date) as month_name, year(date) as year_,
round(sum(fs.sold_quantity*fgp.gross_price)/1000000,2) as gross_sales_amount
from fact_sales_monthly fs
join fact_gross_price fgp
on fs.product_code= fgp.product_code
and fs.fiscal_year = fgp.fiscal_year
join dim_customer c
on c.customer_code = fs.customer_code
where customer = "Atliq Exclusive"
group by month_name, year_
order by gross_sales_amount desc;

Request8 : In which quarter of 2020, got the maximum total_quantity_sold? The final output contains these fields sorted by the total_quantity_sold: Quarter, total_quantity_sold

Query: 

select 
    case
    when month(date) in (9,10,11) then 'Q1'
    when month(date) in (12,1,2) then 'Q2'
    when month(date) in (3,4,5) then 'Q3'
    else 'Q4'
   end as Quarters ,
   sum(sold_quantity) as Total_sold_quantity
from fact_sales_monthly
where fiscal_year = 2020
Group by quarters
order by Total_sold_quantity desc;

Request9 : Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields: channel, gross_sales_mln, percentage.

Query: 

with gross_sales as (select c.channel as channel, 
round(sum(fgp.gross_price*fs.sold_quantity)/1000000,2) as gross_sales_mlns
from fact_sales_monthly fs
join fact_gross_price fgp
on fs.product_code =  fgp.product_code
and fs.fiscal_year =  fgp.fiscal_year
join dim_customer c
on fs.customer_code= c.customer_code
where fs.fiscal_year = 2021
group by c.channel)
select channel, gross_sales_mlns , 
concat(round(gross_sales_mlns/sum(gross_sales_mlns) over() *100 ,2),'%') as percentage from gross_sales
order by percentage;


Request10 : Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields: division, product_code, product, total_sold_quantity, rank_order.

Query: 

with top3_products as 
(select p.division as Division,
   p.product_code as product_code, 
   p.product as product,
   sum(fs.sold_quantity) as total_sold_quantity,
rank() over(partition by division 
order by sum(sold_quantity) desc) as rank_order
from fact_sales_monthly fs
join dim_product p 
on fs.product_code=p.product_code
where fs.fiscal_year = 2021
group by  p.division, p.product_code, p.product
order by total_sold_quantity desc)
select Division, product_code, 
product, total_sold_quantity, rank_order
from top3_products 
where rank_order <= 3;

